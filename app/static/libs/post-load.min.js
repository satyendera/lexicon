//* **** focus-visible.js begin ****//
!(function(e, t) {
  typeof exports === 'object' && typeof module !== 'undefined'
    ? t()
    : typeof define === 'function' && define.amd
      ? define(t)
      : t();
})(0, () => {
  !(function(e) {
    let t;
    function n() {
      t || ((t = !0), e());
    }
    document.readyState === 'complete'
      ? e()
      : ((t = !1),
        document.addEventListener('DOMContentLoaded', n, !1),
        window.addEventListener('load', n, !1));
  })(() => {
    let e = !0;

    let t = !1;

    let n = null;

    const o = {
      text: !0,
      search: !0,
      url: !0,
      tel: !0,
      email: !0,
      password: !0,
      number: !0,
      date: !0,
      month: !0,
      week: !0,
      time: !0,
      datetime: !0,
      'datetime-local': !0,
    };
    function d(t) {
      e = !1;
    }
    function i() {
      document.addEventListener('mousemove', u),
        document.addEventListener('mousedown', u),
        document.addEventListener('mouseup', u),
        document.addEventListener('pointermove', u),
        document.addEventListener('pointerdown', u),
        document.addEventListener('pointerup', u),
        document.addEventListener('touchmove', u),
        document.addEventListener('touchstart', u),
        document.addEventListener('touchend', u);
    }
    function u(t) {
      t.target.nodeName.toLowerCase() !== 'html' &&
        ((e = !1),
        document.removeEventListener('mousemove', u),
        document.removeEventListener('mousedown', u),
        document.removeEventListener('mouseup', u),
        document.removeEventListener('pointermove', u),
        document.removeEventListener('pointerdown', u),
        document.removeEventListener('pointerup', u),
        document.removeEventListener('touchmove', u),
        document.removeEventListener('touchstart', u),
        document.removeEventListener('touchend', u));
    }
    document.addEventListener(
      'keydown',
      t => {
        t.altKey || t.ctrlKey || t.metaKey || (e = !0);
      },
      !0
    ),
      document.addEventListener('mousedown', d, !0),
      document.addEventListener('pointerdown', d, !0),
      document.addEventListener('touchstart', d, !0),
      document.addEventListener(
        'focus',
        t => {
          let n;
          let d;
          let i;
          t.target != document &&
            t.target.nodeName != 'HTML' &&
            (e ||
              ((n = t.target),
              (d = n.type),
              ((i = n.tagName) == 'INPUT' && o[d] && !n.readonly) ||
                (i == 'TEXTAREA' && !n.readonly) ||
                n.contentEditable == 'true')) &&
            ((function(e) {
              e.classList.contains('focus-visible') ||
                (e.classList.add('focus-visible'), e.setAttribute('data-focus-visible-added', ''));
            })(t.target),
            (e = !1));
        },
        !0
      ),
      document.addEventListener(
        'blur',
        e => {
          let o;
          e.target != document &&
            e.target.nodeName != 'HTML' &&
            e.target.classList.contains('focus-visible') &&
            ((t = !0),
            window.clearTimeout(n),
            (n = window.setTimeout(() => {
              (t = !1), window.clearTimeout(n);
            }, 100)),
            (o = e.target).hasAttribute('data-focus-visible-added') &&
              (o.classList.remove('focus-visible'), o.removeAttribute('data-focus-visible-added')));
        },
        !0
      ),
      document.addEventListener(
        'visibilitychange',
        n => {
          document.visibilityState == 'hidden' && (t && (e = !0), i());
        },
        !0
      ),
      i(),
      document.body.classList.add('js-focus-visible');
  });
});
//* **** focus-visible.js end ****//

// add dynamic css links that are not critical
function getAsyncFile(fileSrc) {
  const cssFile = document.createElement('link');
  cssFile.rel = 'stylesheet';
  cssFile.type = 'text/css';
  cssFile.href = fileSrc;
  document.getElementsByTagName('head')[0].appendChild(cssFile);
}
document.addEventListener('DOMContentLoaded', event => {
  getAsyncFile('//fast.fonts.net/cssapi/8820d5d0-3bf0-445d-b590-3a74acb00aa5.css');
});
